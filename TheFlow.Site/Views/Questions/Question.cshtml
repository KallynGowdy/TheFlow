@using MarkdownSharp;
@using TheFlow.Site;

@model TheFlow.API.Models.ViewQuestionModel

@{
    ViewBag.Title = "Question";
    var markdown = new Markdown(true);
    var user = TheFlow.Site.Controllers.ControllerHelper.Authenticate(Request);
}

@section head
{
    <link href="@Helpers.GetCodeStylePath()" type="text/css" rel="stylesheet" />
}

@section Scripts
{
    <script src="~/scripts/pagedown/Markdown.Converter.js"></script>
    <script src="~/scripts/pagedown/Markdown.Sanitizer.js"></script>
    <script src="~/scripts/pagedown/Markdown.Editor.js"></script>
    <script src="~/scripts/prettyprint/prettify.js"></script>
    @*<script src="~/scripts/prettyprint/run_prettify.js"></script>*@
    <script src="~/scripts/editor.js"></script>
    <script type="text/javascript">
        $(function () {
            var textBody = @(new HtmlString(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.Body)));

            var converter = new Markdown.getSanitizingConverter();

            defaultHooks(converter);

            $(".text-body").html(converter.makeHtml(textBody));

            @foreach (var answer in Model.Answers)
            {
                var id = answer.Id;
                @:var text_@id = @(new HtmlString(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(answer.Body)));
                                                                                                                                                                                                                                                                                        @:$(".answer-@id").html(converter.makeHtml(text_@id));
            }
            enableTab("wmd-input");
            highlightCode();

            enableEditor(function(editor){
                editor.getConverter().hooks.chain("preConversion", function(text) {
                    $("#Body").attr("value", text);
                    return text;
                });
            });
        });

        //find all of the elements with .time class
        var timeElements = $('.time-from-now');

        setInterval(function(){
            //set the text
            timeElements.html(function(index, text) {
                timeElements[index].innerText = moment.utc(timeElements[index].getAttribute('data-time')).local().fromNow();
            });
        }, 1000); //60000 /*every minute*/);
    </script>
}

@*@section TimeUpdateFunction
{
    var timePosted = @(new HtmlString(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(Model.DateCreated.ToUniversalTime().ToString("MM/dd/yyyy H:mm:ss"))));
    var format = "MM/DD/YYYY H:mm:ss";
    $("#date-posted").text(moment.utc(timePosted, format).local().fromNow());

    @foreach (var answer in Model.Answers)
    {
        var id = answer.Id;
        @:var time_@id = @(new HtmlString(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(answer.DateCreated.ToUniversalTime().ToString("MM/dd/yyyy H:mm:ss"))));
        @:$("#time-@id").text(moment.utc(time_@id, format).local().fromNow());
    }
}*@

<div class="panel" style="background-color: white">
    <div class="row">
        <div class="columns large-8">
            <h2 style="color: #f2b21b">@Model.Title</h2>
        </div>
        <div class="columns large-offset-1 large-3 text-center">
            <p>Posted by <a href="/Users/Info?user=@Model.Author.DisplayName">@Model.Author.DisplayName</a> <span class="time-from-now" data-time="@Model.DateCreated.ToUniversalTime().ToUtcString()"></span></p>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="columns large-1">
            <a class="button full-width show-for-small">Vote</a>
            <ul class="button-group vertical radius hide-for-small">
                <li><a data-post="@Model.Id" href="#" class="button tiny up-vote" title="Vote Up">▲</a></li>
                <li><a class="button disabled tiny" title="@(String.Format("{0} Up Votes and {1} Down Votes", Model.UpVotes.ToString(), Model.DownVotes.ToString()))">@Model.NetVote</a></li>
                <li><a data-post="@Model.Id" class="button tiny down-vote" title="Vote Down">▼</a></li>
            </ul>
        </div>
        <div class="columns large-11">
            <div class="panel radius transparent">
                @markdown.Transform(Model.Body).ToHtml()
            </div>
        </div>
    </div>

</div>
@if (Model.Answers != null && Model.Answers.Any())
{
    foreach (var answer in Model.Answers)
    {
    <hr />
    <div class="panel" style="background-color: transparent">
        <div class="row">
            <div class="columns large-1">
                <a class="button full-width show-for-small">Vote</a>
                <ul class="button-group vertical radius hide-for-small">
                    <li><a data-post="@answer.Id" href="#" class="button tiny up-vote" title="Vote Up">▲</a></li>
                    <li><a class="button disabled tiny" title="@(String.Format("{0} Up Votes and {1} Down Votes", answer.UpVotes.ToString(), answer.DownVotes.ToString()))">@answer.NetVote</a></li>
                    <li><a data-post="@answer.Id" class="button tiny down-vote"  title="Vote Down">▼</a></li>
                </ul>
            </div>
            <div class="columns large-11">
                <div class="panel radius transparent">
                    @markdown.Transform(answer.Body).ToHtml()
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            @{
        bool displayDelete = (user != null && user.DisplayName == answer.Author.DisplayName);
        string columnSize = displayDelete ? "large-3" : "large-4";
            }
            <div class="columns large-3 small-4">
                <ul class="button-group radius">
                    <li><a href="#" class="button tiny">Share</a></li>
                    <li><a href="#" class="button tiny">Edit</a></li>
                    <li><a href="#" class="button tiny">Flag</a></li>
                    @if (displayDelete)
                    {
                        <li><a href="/Answers/Delete/@answer.Id" class="button tiny">Delete</a></li>
                    }
                </ul>
                @*<div class="row">
                    <div class="@columnSize columns">
                        <a href="#" class="button tiny full-width">Share</a>
                    </div>
                    <div class="@columnSize columns">
                        <a href="#" class="button tiny full-width">Edit</a>
                    </div>
                    <div class="@columnSize columns">
                        <a href="#" class="button tiny full-width">Flag</a>
                    </div>
                    @if (displayDelete)
                    {
                        <div class="@columnSize columns">
                            <a href="/Answers/Delete/@answer.Id" class="button tiny">Delete</a>
                        </div>   
                    }
                </div>*@
            </div>
            <div class="columns large-8 small-8 text-right">
                <p>Posted by <a href="/Users/Info?user=@answer.Author.DisplayName">@answer.Author.DisplayName</a> <span class="time-from-now" data-time="@answer.DateCreated.ToUniversalTime().ToUtcString()"></span></p>
            </div>
        </div>
    </div>
    }
}
else
{
    <hr />
    <h3 class="text-center">No answers have been posted yet. Help and post an answer yourself!</h3>   
}

<hr />
<div class="row">
    <div class="columns large-12">
        <h2 class="hide-for-small">Submit your Answer</h2>
        <h2 class="show-for-small text-center">Submit your Answer</h2>
        <form action="/Answers/Create" method="post" data-abide="">
            @Html.AntiForgeryToken()
            <input type="hidden" id="QuestionId" name="QuestionId" value="@Model.Id.ToString()" />
            <div id="body-field">
                <textarea class="wmd-input" id="wmd-input" style="width: 100%; min-height: 16em;" required></textarea>
                <small class="error">Please provide an answer</small>
            </div>
            <div class="panel radius" style="background-color: transparent;">
                <small class="text-left" style="color: #858585">Preview</small>
                <div id="wmd-preview"></div>
            </div>
            <input type="hidden" id="Body" name="Body" value="" />
            <button class="button success" type="submit">Post your Answer</button>
        </form>
    </div>
</div>
